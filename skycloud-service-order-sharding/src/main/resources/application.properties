spring.application.name = skycloud-service-orderserver.port = 8901spring.profiles.active = devspring.cloud.consul.discovery.register = truespring.cloud.consul.discovery.prefer-ip-address = truespring.cloud.consul.discovery.serviceName = ${spring.application.name}spring.cloud.consul.discovery.port = ${server.port}spring.cloud.consul.discovery.healthCheckPath = /consulhealth/healthCheckspring.cloud.consul.discovery.healthCheckInterval = 15sspring.cloud.consul.discovery.tags = ${spring.application.name},management.context-path=/monitorspring.cloud.consul.discovery.instanceId = ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}#\u672C\u5730IP consul service\u68C0\u6D4B\u65E0\u6548\u89E3\u51B3\u65B9\u6CD5spring.cloud.consul.discovery.heartbeat.enabled = truespring.cloud.consul.host = 127.0.0.1spring.cloud.consul.port = 8500spring.main.allow-bean-definition-overriding = truemanagement.endpoints.web.base-path = /monitormanagement.endpoints.web.exposure.include = *management.endpoint.health.show-details = ALWAYSmybatis.mapper-locations = classpath:mapper/*Mapper.xml#\u5728\u7EBF\u6587\u6863\u914D\u7F6Eswagger.title = \u8BA2\u5355\u670D\u52A1feign.hystrix.enabled = truefeign.okhttp.enabled = truefeign.httpclient.enabled = falsefeign.client.config.default.connectTimeout = 10000feign.client.config.default.readTimeout = 10000feign.compression.request.enabled = truefeign.compression.response.enabled = truehystrix.command.default.execution.isolation.strategy = THREADhystrix.command.default.execution.isolation.thread.timeoutInMilliseconds = 60000hystrix.shareSecurityContext = trueribbon.ReadTimeout = 10000ribbon.ConnectTimeout = 10000#\u5206\u5E03\u5F0F\u4E8B\u52A1logging.level.io.seata = infospring.cloud.alibaba.seata.tx-service-group = springcloud_tx_groupspring.shardingsphere.datasource.names = dsspring.shardingsphere.datasource.ds.type = com.alibaba.druid.pool.DruidDataSourcespring.shardingsphere.datasource.ds.driver-class-name = com.mysql.jdbc.Driverspring.shardingsphere.datasource.ds.url = jdbc:mysql://127.0.0.1:3306/sharding_ds?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&tinyInt1isBit=falsespring.shardingsphere.datasource.ds.username = rootspring.shardingsphere.datasource.ds.password = 123456spring.shardingsphere.datasource.ds.initial-size = 5spring.shardingsphere.datasource.ds.min-idle = 5spring.shardingsphere.datasource.ds.max-active = 20spring.shardingsphere.datasource.ds.max-wait = 60000spring.shardingsphere.datasource.ds.test-while-idle = truespring.shardingsphere.datasource.ds.time-between-eviction-runs-millis = 60000spring.shardingsphere.datasource.ds.min-evictable-idle-time-millis = 30000spring.shardingsphere.datasource.ds.validation-query = select 'x'spring.shardingsphere.datasource.ds.test-on-borrow = falsespring.shardingsphere.datasource.ds.test-on-return = falsespring.shardingsphere.datasource.ds.pool-prepared-statements = truespring.shardingsphere.datasource.ds.max-pool-prepared-statement-per-connection-size = 20spring.shardingsphere.datasource.ds.filters = stat,wallspring.shardingsphere.datasource.ds.connection-properties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000spring.shardingsphere.datasource.ds.use-global-data-source-stat = truespring.shardingsphere.sharding.tables._order.actual-data-nodes = ds._order_$->{0..1}spring.shardingsphere.sharding.tables._order.table-strategy.inline.sharding-column = idspring.shardingsphere.sharding.tables._order.table-strategy.inline.algorithm-expression = _order_$->{id % 2}spring.shardingsphere.sharding.tables._order.key-generator.column = idspring.shardingsphere.sharding.tables._order.key-generator.type = SNOWFLAKEspring.shardingsphere.sharding.tables._order.key-generator.props.worker.id = 123spring.shardingsphere.sharding.tables.ad_order_report.actual-data-nodes = ds.ad_order_report_$->{0..1}spring.shardingsphere.sharding.tables.ad_order_report.table-strategy.inline.sharding-column = order_idspring.shardingsphere.sharding.tables.ad_order_report.table-strategy.inline.algorithm-expression = ad_order_report_$->{order_id % 2}spring.shardingsphere.sharding.tables.ad_order_report.key-generator.column = idspring.shardingsphere.sharding.tables.ad_order_report.key-generator.type = SNOWFLAKEspring.shardingsphere.sharding.tables.ad_order_report.key-generator.props.worker.id = 123spring.shardingsphere.sharding.tables.ad_order_detail.actual-data-nodes = ds.ad_order_detail_$->{0..1}spring.shardingsphere.sharding.tables.ad_order_detail.table-strategy.inline.sharding-column = order_report_idspring.shardingsphere.sharding.tables.ad_order_detail.table-strategy.inline.algorithm-expression = ad_order_detail_$->{order_report_id % 2}spring.shardingsphere.sharding.tables.ad_order_detail.key-generator.column = idspring.shardingsphere.sharding.tables.ad_order_detail.key-generator.type = SNOWFLAKEspring.shardingsphere.sharding.tables.ad_order_detail.key-generator.props.worker.id = 123spring.shardingsphere.props.sql.show=true